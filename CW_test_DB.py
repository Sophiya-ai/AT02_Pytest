import pytest

from CW_DB import init_db, add_user, get_user


# ---Подготовим фикстуру, создав базу данных и обеспечив подключение к ней---
# Для этого нужно использовать специальный декоратор, указывающий на то, что прописанная здесь функция
# будет являться фикстурой, подготавливая тестовую среду и предоставляя ресурсы для этой среды;
# Вызовем функцию conn, которая создаст базу данных: init_db, а также возвращаем подключение,
# чтобы с ним можно было работать;
# Чтобы остальные функции тоже могли работать с подключением conn, используем yield.
# yield, как и return, возвращает значения, и в этом случае yield будет возвращать объект conn тестам,
# которые будут использовать нашу фикстуру.
# yield позволяет функции временно приостановить свое выполнение, пока тесты используют ресурс, который мы им передали
@pytest.fixture
def db_conn():
    conn = init_db()
    yield conn
    conn.close()


# В круглых скобках указываем фикстуру, которая передает информацию из фикстуры в нашу тестовую функцию,
# в данном случае подключение к базе данных. PyTest понимает это автоматически и передает необходимые данные
def test_add_and_get_user(db_conn):
    add_user(db_conn, 'Sasha', 30)
    user = get_user(db_conn, 'Sasha')
    assert user == (1, 'Sasha', 30)
